
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
    test:
      runs-on: ubuntu-latest
      env:
          APPNAME: "movie-list-app"
          ENVIRONMENT: "development"
          DB_CONNECTIONSTRING: "jdbc:mysql://movie-app-db:3306/my_movies_db?useUnicode=true&characterEncoding=UTF8&serverTimezone=America/Chicago&maxReconnects=3&useLegacyDatetimeCode=true"
          DB_CLASS: "com.mysql.cj.jdbc.Driver"
          DB_DRIVER: "MySQL"
          DB_BUNDLENAME: "com.mysql.cj"
          DB_BUNDLEVERSION: "8.0.19"
          OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
          COMPOSE_DOCKER_CLI_BUILD: 1
      steps:
      - name: Checkout
        uses: actions/checkout@v2

      -
        # BuildKit (used with `docker buildx`) is the best way to build images
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      -
        # This makes image builds fast!
        name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Setup DB credentials
        run: |
          mkdir secrets
          openssl rand 20 | base64 -w 0 > ./secrets/MYSQL_ROOT_PASSWORD
          openssl rand 20 | base64 -w 0 > ./secrets/MYSQL_PASSWORD
          echo "mydbuser" > ./secrets/MYSQL_USER

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - name: Execute API tests
        run: docker exec movie-app-api box testbox run

      - name: Execute Cypress e2e tests
        run: docker exec movie-app sudo npx cypress run
